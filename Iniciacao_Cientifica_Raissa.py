while True:
    print("MENU INICIAL:"
          "\n(1) Fazer o experimento."
          "\n(2) Informações sobre o experimento (inglês)."
          "\n(3) Sair do programa.")
    opcao = int(input("Escolha sua opção:"))
    if opcao == 2:
        print("#" * 100)
        print("""
        Experiment: The Computer May Lie
        Goal: The aim of this experiment is to compute a number of orbits for several
        different functions and record the results. We will see as we proceed that
        results generated by the computer can often misleading or just plain wrong!
        
        Procedure: Consider the following three functions.
        1. F(x) = x^2 - 2.
        2. G(x) = x^2 + c for some c < -2 (you choose c).
        3. The doubling functions D.
        
        For each of these functions, choose ten different initial seeds. For the
        doubling function, each seed should be in the interval [0,1). For F(x) = x^2 -2
        each should be in the interval (-2,2). For each chosen seed, compute the first
        100 points on the corresponding orbit. Record the results by listing the initial
        seed together with what happened to the orbit, that is, determine wheter the 
        orbit is fixed, periodic, eventually periodic, or has no visible pattern.\n""")
        print("#" * 100)
    elif opcao == 1:
        print("#" * 75)
        print("\nATENÇÃO!!É recomendado ler as informações antes de realizar o experimento!!!")
        print("Caso você tenha realizado o experimento anteriormente, os resultados de agora"
              "\nirão substituir os anteriores, então se necessário, copie-os antes de prosseguir.")
        escolha = int(input("\nDeseja continuar? \n(1)Sim\n(2)Não\nSua opção: "))
        if escolha == 1:
            k = 1
            while True:
                # Esse loop é para forçar uma entrada válida para X em F(x)
                print(f"\nTESTE NÚMERO {k}:")
                while True:
                    x = float(input("Digite o valor de 'x' para F(x), sendo -2 < x < 2: "))
                    if -2 < x < 2:
                        break
                    else:
                        print("Número inválido!!!")

                results = open(f'Resultados{k}_funcao_1.txt','w')  # Cria-se então um arquivo .txt para apresentação dos resultados..
                results.write(f"Resultados: Xo = {x}\n")  # ..da primeira função
                results.write("-" * 24)
                results.write("\n N |	x    |   F(x)  |\n")
                results.write("-" * 24)
                results.write("\n")

                for i in range(1, 101):  # Então a iteração é feita
                    F = (x ** 2) - 2
                    results.write(f"%3i| %7.4f | %7.4f |\n" % (i, x, F))
                    x = F

                print("Iteração da função F(x) feita e armazenada com sucesso!\n")
                print("#" * 75)
results_nn = [save_one; save_two,; save_three; save_four; save_five;
                ########################################################################################################################
                ########################################################################################################################

                # Esse loop é para forçar uma entrada válida para C em G(x)
                while True:
                    c = float(input("Digite o valor de 'c' para G(x), sendo c < -2: "))
                    if c >= -2:
                        print("Número inválido!")
                    else:
                        x = float(input("Digite o valor de 'x' para G(x): "))
                        break

                results = open(f'Resultados{k}_funcao_2.txt','w')  # Cria-se então um arquivo .txt para apresentação dos resultados..
                results.write(f"Resultados: Xo = {x} e c = {c}\n")  # ..da segunda função
                results.write("-" * 24)
                results.write("\n N |	x    |   G(x)  |\n")
                results.write("-" * 24)
                results.write("\n")

                for i in range(1,101):  # Então a iteração é feita
                    G = x ** 2 + c
                    if G > (400 * 100):
                        results.write("\nO valor de G(x) tende ao infinito,logo\n"
                                      "não tem como continuar com a iteração.")
                        break
                    results.write(f"%3i| %7.4f | %7.4f |\n" % (i, x, G))
                    x = G

                print("\nIteração da função G(x) feita com sucesso!\n")
                print("#" * 75)

                ########################################################################################################################
                ########################################################################################################################

                # Esse loop é para forçar uma entrada válida para X em D(x)
                while True:
                    x = float(input("Digite o valor de 'x' para D(x), sendo 0 <= x < 1: "))
                    if 0 <= x < 1:
                        break
                    else:
                        print("Número inválido!!")

                results = open(f'Resultados{k}_funcao_3.txt','w')  # Cria-se então um arquivo .txt para apresentação dos resultados..
                results.write(f"Resultados: Xo = {x}\n")  # ..da terceira função
                results.write("-" * 24)
                results.write("\n N |	x    |   D(x)  |\n")
                results.write("-" * 24)
                results.write("\n")

                for i in range(1,101):  # Então a iteração é feita
                    if 0 <= x < 0.5:  # Testa a primeira condição da função
                        D = 2 * x
                    elif 0.5 <= x < 1:  # Testa a segunda condição
                        D = (2 * x) - 1
                    else:  # Garante que mesmo que o x não atenda nenhuma das condições anteriores, D ainda assumirá um valor
                        print("Erro! 'x' não está dentro dos limites\nAssumindo então D = x...")
                        if x > 1:
                            D /= 10
                        else:
                            D *= 10
                    results.write(f"%3i| %7.4f | %7.4f |\n" % (i, x, D))
                    x = D

                print("\nIteração da função D(x) feita com sucesso!")
                print("O código terminou, você obteve seus resultados!!\n")
                print("#" * 75)
                k += 1
                if k >= 10:
                    break
                opcao = int(input("\n(1)Continuar o experimento\n(2)Parar o experimento\nSua opção: "))
                if opcao == 2:
                    break
                elif opcao == 1:
                    continue
        print("\n")
        print("#"*75)
    else:
        break
    print("\n")